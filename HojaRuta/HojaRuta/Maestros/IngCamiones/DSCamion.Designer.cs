//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Data;
using System.Diagnostics;
using System.IO;
using System.Runtime.Serialization;
using System.Xml;
using System.Xml.Schema;
using System.Xml.Serialization;

#pragma warning disable 1591

namespace HojaRuta.Maestros.IngCamiones {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [Serializable()]
    [DesignerCategory("code")]
    [ToolboxItem(true)]
    [XmlSchemaProvider("GetTypedDataSetSchema")]
    [XmlRoot("DSCamion")]
    [HelpKeyword("vs.data.DataSet")]
    public partial class DSCamion : DataSet {
        
        private CamionDataTable tableCamion;
        
        private SchemaSerializationMode _schemaSerializationMode = SchemaSerializationMode.IncludeSchema;
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DSCamion() {
            this.BeginInit();
            this.InitClass();
            CollectionChangeEventHandler schemaChangedHandler = new CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DSCamion(SerializationInfo info, StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                CollectionChangeEventHandler schemaChangedHandler1 = new CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == SchemaSerializationMode.IncludeSchema)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new StringReader(strSchema)));
                if ((ds.Tables["Camion"] != null)) {
                    base.Tables.Add(new CamionDataTable(ds.Tables["Camion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new XmlTextReader(new StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            CollectionChangeEventHandler schemaChangedHandler = new CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [Browsable(false)]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public CamionDataTable Camion {
            get {
                return this.tableCamion;
            }
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [Browsable(true)]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)]
        public override SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
        public new DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
        public new DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override DataSet Clone() {
            DSCamion cln = ((DSCamion)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                DataSet ds = new DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Camion"] != null)) {
                    base.Tables.Add(new CamionDataTable(ds.Tables["Camion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override XmlSchema GetSchemaSerializable() {
            MemoryStream stream = new MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableCamion = ((CamionDataTable)(base.Tables["Camion"]));
            if ((initTable == true)) {
                if ((this.tableCamion != null)) {
                    this.tableCamion.InitVars();
                }
            }
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DSCamion";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSCamion.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = SchemaSerializationMode.IncludeSchema;
            this.tableCamion = new CamionDataTable();
            base.Tables.Add(this.tableCamion);
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCamion() {
            return false;
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, CollectionChangeEventArgs e) {
            if ((e.Action == CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static XmlSchemaComplexType GetTypedDataSetSchema(XmlSchemaSet xs) {
            DSCamion ds = new DSCamion();
            XmlSchemaComplexType type = new XmlSchemaComplexType();
            XmlSchemaSequence sequence = new XmlSchemaSequence();
            XmlSchemaAny any = new XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                MemoryStream s1 = new MemoryStream();
                MemoryStream s2 = new MemoryStream();
                try {
                    XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CamionRowChangeEventHandler(object sender, CamionRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [Serializable()]
        [XmlSchemaProvider("GetTypedTableSchema")]
        public partial class CamionDataTable : TypedTableBase<CamionRow> {
            
            private DataColumn columnCodigo;
            
            private DataColumn columnDesc;
            
            private DataColumn columnPatente;
            
            private DataColumn columnEstado;
            
            private DataColumn columnNomb_Prove;
            
            private DataColumn columnNomb_Chofer;
            
            private DataColumn columnVto_Ruta;
            
            private DataColumn columnVto_RTO;
            
            private DataColumn columnVto_Hab_Dom;
            
            private DataColumn columnVto_Seguro;
            
            private DataColumn _columnVto_Cert__Carg__Pel;
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CamionDataTable() {
                this.TableName = "Camion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CamionDataTable(DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CamionDataTable(SerializationInfo info, StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CodigoColumn {
                get {
                    return this.columnCodigo;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DescColumn {
                get {
                    return this.columnDesc;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PatenteColumn {
                get {
                    return this.columnPatente;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn EstadoColumn {
                get {
                    return this.columnEstado;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn Nomb_ProveColumn {
                get {
                    return this.columnNomb_Prove;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn Nomb_ChoferColumn {
                get {
                    return this.columnNomb_Chofer;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn Vto_RutaColumn {
                get {
                    return this.columnVto_Ruta;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn Vto_RTOColumn {
                get {
                    return this.columnVto_RTO;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn Vto_Hab_DomColumn {
                get {
                    return this.columnVto_Hab_Dom;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn Vto_SeguroColumn {
                get {
                    return this.columnVto_Seguro;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn _Vto_Cert__Carg__PelColumn {
                get {
                    return this._columnVto_Cert__Carg__Pel;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CamionRow this[int index] {
                get {
                    return ((CamionRow)(this.Rows[index]));
                }
            }
            
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CamionRowChangeEventHandler CamionRowChanging;
            
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CamionRowChangeEventHandler CamionRowChanged;
            
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CamionRowChangeEventHandler CamionRowDeleting;
            
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CamionRowChangeEventHandler CamionRowDeleted;
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCamionRow(CamionRow row) {
                this.Rows.Add(row);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CamionRow AddCamionRow(string Codigo, string Desc, string Patente, string Estado, string Nomb_Prove, string Nomb_Chofer, string Vto_Ruta, string Vto_RTO, string Vto_Hab_Dom, string Vto_Seguro, string _Vto_Cert__Carg__Pel) {
                CamionRow rowCamionRow = ((CamionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Codigo,
                        Desc,
                        Patente,
                        Estado,
                        Nomb_Prove,
                        Nomb_Chofer,
                        Vto_Ruta,
                        Vto_RTO,
                        Vto_Hab_Dom,
                        Vto_Seguro,
                        _Vto_Cert__Carg__Pel};
                rowCamionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCamionRow);
                return rowCamionRow;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone() {
                CamionDataTable cln = ((CamionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance() {
                return new CamionDataTable();
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCodigo = base.Columns["Codigo"];
                this.columnDesc = base.Columns["Desc"];
                this.columnPatente = base.Columns["Patente"];
                this.columnEstado = base.Columns["Estado"];
                this.columnNomb_Prove = base.Columns["Nomb Prove"];
                this.columnNomb_Chofer = base.Columns["Nomb Chofer"];
                this.columnVto_Ruta = base.Columns["Vto Ruta"];
                this.columnVto_RTO = base.Columns["Vto RTO"];
                this.columnVto_Hab_Dom = base.Columns["Vto Hab Dom"];
                this.columnVto_Seguro = base.Columns["Vto Seguro"];
                this._columnVto_Cert__Carg__Pel = base.Columns["Vto Cert. Carg. Pel"];
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCodigo = new DataColumn("Codigo", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCodigo);
                this.columnDesc = new DataColumn("Desc", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnDesc);
                this.columnPatente = new DataColumn("Patente", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPatente);
                this.columnEstado = new DataColumn("Estado", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnEstado);
                this.columnNomb_Prove = new DataColumn("Nomb Prove", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNomb_Prove);
                this.columnNomb_Chofer = new DataColumn("Nomb Chofer", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNomb_Chofer);
                this.columnVto_Ruta = new DataColumn("Vto Ruta", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnVto_Ruta);
                this.columnVto_RTO = new DataColumn("Vto RTO", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnVto_RTO);
                this.columnVto_Hab_Dom = new DataColumn("Vto Hab Dom", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnVto_Hab_Dom);
                this.columnVto_Seguro = new DataColumn("Vto Seguro", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnVto_Seguro);
                this._columnVto_Cert__Carg__Pel = new DataColumn("Vto Cert. Carg. Pel", typeof(string), null, MappingType.Element);
                this._columnVto_Cert__Carg__Pel.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnVto_Cert__Carg__Pel");
                this._columnVto_Cert__Carg__Pel.ExtendedProperties.Add("Generator_UserColumnName", "Vto Cert. Carg. Pel");
                base.Columns.Add(this._columnVto_Cert__Carg__Pel);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CamionRow NewCamionRow() {
                return ((CamionRow)(this.NewRow()));
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CamionRow(builder);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType() {
                return typeof(CamionRow);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CamionRowChanged != null)) {
                    this.CamionRowChanged(this, new CamionRowChangeEvent(((CamionRow)(e.Row)), e.Action));
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CamionRowChanging != null)) {
                    this.CamionRowChanging(this, new CamionRowChangeEvent(((CamionRow)(e.Row)), e.Action));
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CamionRowDeleted != null)) {
                    this.CamionRowDeleted(this, new CamionRowChangeEvent(((CamionRow)(e.Row)), e.Action));
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CamionRowDeleting != null)) {
                    this.CamionRowDeleting(this, new CamionRowChangeEvent(((CamionRow)(e.Row)), e.Action));
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCamionRow(CamionRow row) {
                this.Rows.Remove(row);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs) {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DSCamion ds = new DSCamion();
                XmlSchemaAny any1 = new XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                XmlSchemaAny any2 = new XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute1 = new XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CamionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    MemoryStream s1 = new MemoryStream();
                    MemoryStream s2 = new MemoryStream();
                    try {
                        XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CamionRow : DataRow {
            
            private CamionDataTable tableCamion;
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CamionRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCamion = ((CamionDataTable)(this.Table));
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Codigo {
                get {
                    try {
                        return ((string)(this[this.tableCamion.CodigoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("El valor de la columna \'Codigo\' de la tabla \'Camion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCamion.CodigoColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Desc {
                get {
                    try {
                        return ((string)(this[this.tableCamion.DescColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("El valor de la columna \'Desc\' de la tabla \'Camion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCamion.DescColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Patente {
                get {
                    try {
                        return ((string)(this[this.tableCamion.PatenteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("El valor de la columna \'Patente\' de la tabla \'Camion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCamion.PatenteColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Estado {
                get {
                    try {
                        return ((string)(this[this.tableCamion.EstadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("El valor de la columna \'Estado\' de la tabla \'Camion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCamion.EstadoColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nomb_Prove {
                get {
                    try {
                        return ((string)(this[this.tableCamion.Nomb_ProveColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("El valor de la columna \'Nomb Prove\' de la tabla \'Camion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCamion.Nomb_ProveColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nomb_Chofer {
                get {
                    try {
                        return ((string)(this[this.tableCamion.Nomb_ChoferColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("El valor de la columna \'Nomb Chofer\' de la tabla \'Camion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCamion.Nomb_ChoferColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Vto_Ruta {
                get {
                    try {
                        return ((string)(this[this.tableCamion.Vto_RutaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("El valor de la columna \'Vto Ruta\' de la tabla \'Camion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCamion.Vto_RutaColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Vto_RTO {
                get {
                    try {
                        return ((string)(this[this.tableCamion.Vto_RTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("El valor de la columna \'Vto RTO\' de la tabla \'Camion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCamion.Vto_RTOColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Vto_Hab_Dom {
                get {
                    try {
                        return ((string)(this[this.tableCamion.Vto_Hab_DomColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("El valor de la columna \'Vto Hab Dom\' de la tabla \'Camion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCamion.Vto_Hab_DomColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Vto_Seguro {
                get {
                    try {
                        return ((string)(this[this.tableCamion.Vto_SeguroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("El valor de la columna \'Vto Seguro\' de la tabla \'Camion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCamion.Vto_SeguroColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string _Vto_Cert__Carg__Pel {
                get {
                    try {
                        return ((string)(this[this.tableCamion._Vto_Cert__Carg__PelColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("El valor de la columna \'Vto Cert. Carg. Pel\' de la tabla \'Camion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableCamion._Vto_Cert__Carg__PelColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodigoNull() {
                return this.IsNull(this.tableCamion.CodigoColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodigoNull() {
                this[this.tableCamion.CodigoColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescNull() {
                return this.IsNull(this.tableCamion.DescColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescNull() {
                this[this.tableCamion.DescColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatenteNull() {
                return this.IsNull(this.tableCamion.PatenteColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatenteNull() {
                this[this.tableCamion.PatenteColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstadoNull() {
                return this.IsNull(this.tableCamion.EstadoColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEstadoNull() {
                this[this.tableCamion.EstadoColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomb_ProveNull() {
                return this.IsNull(this.tableCamion.Nomb_ProveColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomb_ProveNull() {
                this[this.tableCamion.Nomb_ProveColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomb_ChoferNull() {
                return this.IsNull(this.tableCamion.Nomb_ChoferColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomb_ChoferNull() {
                this[this.tableCamion.Nomb_ChoferColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVto_RutaNull() {
                return this.IsNull(this.tableCamion.Vto_RutaColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVto_RutaNull() {
                this[this.tableCamion.Vto_RutaColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVto_RTONull() {
                return this.IsNull(this.tableCamion.Vto_RTOColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVto_RTONull() {
                this[this.tableCamion.Vto_RTOColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVto_Hab_DomNull() {
                return this.IsNull(this.tableCamion.Vto_Hab_DomColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVto_Hab_DomNull() {
                this[this.tableCamion.Vto_Hab_DomColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVto_SeguroNull() {
                return this.IsNull(this.tableCamion.Vto_SeguroColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVto_SeguroNull() {
                this[this.tableCamion.Vto_SeguroColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_Vto_Cert__Carg__PelNull() {
                return this.IsNull(this.tableCamion._Vto_Cert__Carg__PelColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set_Vto_Cert__Carg__PelNull() {
                this[this.tableCamion._Vto_Cert__Carg__PelColumn] = Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CamionRowChangeEvent : EventArgs {
            
            private CamionRow eventRow;
            
            private DataRowAction eventAction;
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CamionRowChangeEvent(CamionRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CamionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591