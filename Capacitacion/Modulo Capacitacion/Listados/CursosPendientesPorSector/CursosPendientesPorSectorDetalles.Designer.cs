//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Data;
using System.Diagnostics;
using System.IO;
using System.Runtime.Serialization;
using System.Xml;
using System.Xml.Schema;
using System.Xml.Serialization;

#pragma warning disable 1591

namespace Modulo_Capacitacion.Listados.CursosPendientesPorSector {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [Serializable()]
    [DesignerCategory("code")]
    [ToolboxItem(true)]
    [XmlSchemaProvider("GetTypedDataSetSchema")]
    [XmlRoot("CursosPendientesPorSectorDetalles")]
    [HelpKeyword("vs.data.DataSet")]
    public partial class CursosPendientesPorSectorDetalles : DataSet {
        
        private DetallesDataTable tableDetalles;
        
        private SchemaSerializationMode _schemaSerializationMode = SchemaSerializationMode.IncludeSchema;
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CursosPendientesPorSectorDetalles() {
            this.BeginInit();
            this.InitClass();
            CollectionChangeEventHandler schemaChangedHandler = new CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected CursosPendientesPorSectorDetalles(SerializationInfo info, StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                CollectionChangeEventHandler schemaChangedHandler1 = new CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == SchemaSerializationMode.IncludeSchema)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new StringReader(strSchema)));
                if ((ds.Tables["Detalles"] != null)) {
                    base.Tables.Add(new DetallesDataTable(ds.Tables["Detalles"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new XmlTextReader(new StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            CollectionChangeEventHandler schemaChangedHandler = new CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [Browsable(false)]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public DetallesDataTable Detalles {
            get {
                return this.tableDetalles;
            }
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [Browsable(true)]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)]
        public override SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
        public new DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
        public new DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override DataSet Clone() {
            CursosPendientesPorSectorDetalles cln = ((CursosPendientesPorSectorDetalles)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                DataSet ds = new DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Detalles"] != null)) {
                    base.Tables.Add(new DetallesDataTable(ds.Tables["Detalles"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override XmlSchema GetSchemaSerializable() {
            MemoryStream stream = new MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDetalles = ((DetallesDataTable)(base.Tables["Detalles"]));
            if ((initTable == true)) {
                if ((this.tableDetalles != null)) {
                    this.tableDetalles.InitVars();
                }
            }
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "CursosPendientesPorSectorDetalles";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/CursosPendientesPorSectorDetalles.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = SchemaSerializationMode.IncludeSchema;
            this.tableDetalles = new DetallesDataTable();
            base.Tables.Add(this.tableDetalles);
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDetalles() {
            return false;
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, CollectionChangeEventArgs e) {
            if ((e.Action == CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [DebuggerNonUserCode()]
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static XmlSchemaComplexType GetTypedDataSetSchema(XmlSchemaSet xs) {
            CursosPendientesPorSectorDetalles ds = new CursosPendientesPorSectorDetalles();
            XmlSchemaComplexType type = new XmlSchemaComplexType();
            XmlSchemaSequence sequence = new XmlSchemaSequence();
            XmlSchemaAny any = new XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                MemoryStream s1 = new MemoryStream();
                MemoryStream s2 = new MemoryStream();
                try {
                    XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DetallesRowChangeEventHandler(object sender, DetallesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [Serializable()]
        [XmlSchemaProvider("GetTypedTableSchema")]
        public partial class DetallesDataTable : TypedTableBase<DetallesRow> {
            
            private DataColumn columnClave;
            
            private DataColumn columnLegajo;
            
            private DataColumn columnNombreApellido;
            
            private DataColumn columnPerfil;
            
            private DataColumn columnDescPerfil;
            
            private DataColumn columnCurso;
            
            private DataColumn columnDescCurso;
            
            private DataColumn columnTema;
            
            private DataColumn columnDescTema;
            
            private DataColumn columnHoras;
            
            private DataColumn columnRealizadas;
            
            private DataColumn columnSector;
            
            private DataColumn columnDescSector;
            
            private DataColumn columnAno;
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DetallesDataTable() {
                this.TableName = "Detalles";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DetallesDataTable(DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DetallesDataTable(SerializationInfo info, StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ClaveColumn {
                get {
                    return this.columnClave;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn LegajoColumn {
                get {
                    return this.columnLegajo;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NombreApellidoColumn {
                get {
                    return this.columnNombreApellido;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PerfilColumn {
                get {
                    return this.columnPerfil;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DescPerfilColumn {
                get {
                    return this.columnDescPerfil;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CursoColumn {
                get {
                    return this.columnCurso;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DescCursoColumn {
                get {
                    return this.columnDescCurso;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TemaColumn {
                get {
                    return this.columnTema;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DescTemaColumn {
                get {
                    return this.columnDescTema;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn HorasColumn {
                get {
                    return this.columnHoras;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn RealizadasColumn {
                get {
                    return this.columnRealizadas;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SectorColumn {
                get {
                    return this.columnSector;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DescSectorColumn {
                get {
                    return this.columnDescSector;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AnoColumn {
                get {
                    return this.columnAno;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DetallesRow this[int index] {
                get {
                    return ((DetallesRow)(this.Rows[index]));
                }
            }
            
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DetallesRowChangeEventHandler DetallesRowChanging;
            
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DetallesRowChangeEventHandler DetallesRowChanged;
            
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DetallesRowChangeEventHandler DetallesRowDeleting;
            
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DetallesRowChangeEventHandler DetallesRowDeleted;
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDetallesRow(DetallesRow row) {
                this.Rows.Add(row);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DetallesRow AddDetallesRow(int Clave, int Legajo, string NombreApellido, int Perfil, string DescPerfil, int Curso, string DescCurso, int Tema, string DescTema, double Horas, double Realizadas, string Sector, string DescSector, string Ano) {
                DetallesRow rowDetallesRow = ((DetallesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Clave,
                        Legajo,
                        NombreApellido,
                        Perfil,
                        DescPerfil,
                        Curso,
                        DescCurso,
                        Tema,
                        DescTema,
                        Horas,
                        Realizadas,
                        Sector,
                        DescSector,
                        Ano};
                rowDetallesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDetallesRow);
                return rowDetallesRow;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone() {
                DetallesDataTable cln = ((DetallesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance() {
                return new DetallesDataTable();
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnClave = base.Columns["Clave"];
                this.columnLegajo = base.Columns["Legajo"];
                this.columnNombreApellido = base.Columns["NombreApellido"];
                this.columnPerfil = base.Columns["Perfil"];
                this.columnDescPerfil = base.Columns["DescPerfil"];
                this.columnCurso = base.Columns["Curso"];
                this.columnDescCurso = base.Columns["DescCurso"];
                this.columnTema = base.Columns["Tema"];
                this.columnDescTema = base.Columns["DescTema"];
                this.columnHoras = base.Columns["Horas"];
                this.columnRealizadas = base.Columns["Realizadas"];
                this.columnSector = base.Columns["Sector"];
                this.columnDescSector = base.Columns["DescSector"];
                this.columnAno = base.Columns["Ano"];
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnClave = new DataColumn("Clave", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnClave);
                this.columnLegajo = new DataColumn("Legajo", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnLegajo);
                this.columnNombreApellido = new DataColumn("NombreApellido", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNombreApellido);
                this.columnPerfil = new DataColumn("Perfil", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnPerfil);
                this.columnDescPerfil = new DataColumn("DescPerfil", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnDescPerfil);
                this.columnCurso = new DataColumn("Curso", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnCurso);
                this.columnDescCurso = new DataColumn("DescCurso", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnDescCurso);
                this.columnTema = new DataColumn("Tema", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTema);
                this.columnDescTema = new DataColumn("DescTema", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnDescTema);
                this.columnHoras = new DataColumn("Horas", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnHoras);
                this.columnRealizadas = new DataColumn("Realizadas", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnRealizadas);
                this.columnSector = new DataColumn("Sector", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSector);
                this.columnDescSector = new DataColumn("DescSector", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnDescSector);
                this.columnAno = new DataColumn("Ano", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAno);
                this.columnNombreApellido.DefaultValue = ((string)(""));
                this.columnDescPerfil.DefaultValue = ((string)(""));
                this.columnDescCurso.DefaultValue = ((string)(""));
                this.columnDescTema.DefaultValue = ((string)(""));
                this.columnHoras.DefaultValue = ((double)(0D));
                this.columnRealizadas.DefaultValue = ((double)(0D));
                this.columnAno.DefaultValue = ((string)(""));
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DetallesRow NewDetallesRow() {
                return ((DetallesRow)(this.NewRow()));
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new DetallesRow(builder);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType() {
                return typeof(DetallesRow);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DetallesRowChanged != null)) {
                    this.DetallesRowChanged(this, new DetallesRowChangeEvent(((DetallesRow)(e.Row)), e.Action));
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DetallesRowChanging != null)) {
                    this.DetallesRowChanging(this, new DetallesRowChangeEvent(((DetallesRow)(e.Row)), e.Action));
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DetallesRowDeleted != null)) {
                    this.DetallesRowDeleted(this, new DetallesRowChangeEvent(((DetallesRow)(e.Row)), e.Action));
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DetallesRowDeleting != null)) {
                    this.DetallesRowDeleting(this, new DetallesRowChangeEvent(((DetallesRow)(e.Row)), e.Action));
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDetallesRow(DetallesRow row) {
                this.Rows.Remove(row);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs) {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                CursosPendientesPorSectorDetalles ds = new CursosPendientesPorSectorDetalles();
                XmlSchemaAny any1 = new XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                XmlSchemaAny any2 = new XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute1 = new XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DetallesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    MemoryStream s1 = new MemoryStream();
                    MemoryStream s2 = new MemoryStream();
                    try {
                        XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DetallesRow : DataRow {
            
            private DetallesDataTable tableDetalles;
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DetallesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableDetalles = ((DetallesDataTable)(this.Table));
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Clave {
                get {
                    try {
                        return ((int)(this[this.tableDetalles.ClaveColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("The value for column \'Clave\' in table \'Detalles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetalles.ClaveColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Legajo {
                get {
                    try {
                        return ((int)(this[this.tableDetalles.LegajoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("The value for column \'Legajo\' in table \'Detalles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetalles.LegajoColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NombreApellido {
                get {
                    try {
                        return ((string)(this[this.tableDetalles.NombreApellidoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("The value for column \'NombreApellido\' in table \'Detalles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetalles.NombreApellidoColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Perfil {
                get {
                    try {
                        return ((int)(this[this.tableDetalles.PerfilColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("The value for column \'Perfil\' in table \'Detalles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetalles.PerfilColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DescPerfil {
                get {
                    try {
                        return ((string)(this[this.tableDetalles.DescPerfilColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("The value for column \'DescPerfil\' in table \'Detalles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetalles.DescPerfilColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Curso {
                get {
                    try {
                        return ((int)(this[this.tableDetalles.CursoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("The value for column \'Curso\' in table \'Detalles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetalles.CursoColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DescCurso {
                get {
                    try {
                        return ((string)(this[this.tableDetalles.DescCursoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("The value for column \'DescCurso\' in table \'Detalles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetalles.DescCursoColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Tema {
                get {
                    try {
                        return ((int)(this[this.tableDetalles.TemaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("The value for column \'Tema\' in table \'Detalles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetalles.TemaColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DescTema {
                get {
                    try {
                        return ((string)(this[this.tableDetalles.DescTemaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("The value for column \'DescTema\' in table \'Detalles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetalles.DescTemaColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Horas {
                get {
                    try {
                        return ((double)(this[this.tableDetalles.HorasColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("The value for column \'Horas\' in table \'Detalles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetalles.HorasColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Realizadas {
                get {
                    try {
                        return ((double)(this[this.tableDetalles.RealizadasColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("The value for column \'Realizadas\' in table \'Detalles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetalles.RealizadasColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Sector {
                get {
                    try {
                        return ((string)(this[this.tableDetalles.SectorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("The value for column \'Sector\' in table \'Detalles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetalles.SectorColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DescSector {
                get {
                    try {
                        return ((string)(this[this.tableDetalles.DescSectorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("The value for column \'DescSector\' in table \'Detalles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetalles.DescSectorColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ano {
                get {
                    try {
                        return ((string)(this[this.tableDetalles.AnoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("The value for column \'Ano\' in table \'Detalles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetalles.AnoColumn] = value;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClaveNull() {
                return this.IsNull(this.tableDetalles.ClaveColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClaveNull() {
                this[this.tableDetalles.ClaveColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLegajoNull() {
                return this.IsNull(this.tableDetalles.LegajoColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLegajoNull() {
                this[this.tableDetalles.LegajoColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNombreApellidoNull() {
                return this.IsNull(this.tableDetalles.NombreApellidoColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNombreApellidoNull() {
                this[this.tableDetalles.NombreApellidoColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerfilNull() {
                return this.IsNull(this.tableDetalles.PerfilColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerfilNull() {
                this[this.tableDetalles.PerfilColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescPerfilNull() {
                return this.IsNull(this.tableDetalles.DescPerfilColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescPerfilNull() {
                this[this.tableDetalles.DescPerfilColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCursoNull() {
                return this.IsNull(this.tableDetalles.CursoColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCursoNull() {
                this[this.tableDetalles.CursoColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescCursoNull() {
                return this.IsNull(this.tableDetalles.DescCursoColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescCursoNull() {
                this[this.tableDetalles.DescCursoColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTemaNull() {
                return this.IsNull(this.tableDetalles.TemaColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTemaNull() {
                this[this.tableDetalles.TemaColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescTemaNull() {
                return this.IsNull(this.tableDetalles.DescTemaColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescTemaNull() {
                this[this.tableDetalles.DescTemaColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHorasNull() {
                return this.IsNull(this.tableDetalles.HorasColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHorasNull() {
                this[this.tableDetalles.HorasColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRealizadasNull() {
                return this.IsNull(this.tableDetalles.RealizadasColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRealizadasNull() {
                this[this.tableDetalles.RealizadasColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSectorNull() {
                return this.IsNull(this.tableDetalles.SectorColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSectorNull() {
                this[this.tableDetalles.SectorColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescSectorNull() {
                return this.IsNull(this.tableDetalles.DescSectorColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescSectorNull() {
                this[this.tableDetalles.DescSectorColumn] = Convert.DBNull;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnoNull() {
                return this.IsNull(this.tableDetalles.AnoColumn);
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnoNull() {
                this[this.tableDetalles.AnoColumn] = Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DetallesRowChangeEvent : EventArgs {
            
            private DetallesRow eventRow;
            
            private DataRowAction eventAction;
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DetallesRowChangeEvent(DetallesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DetallesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [DebuggerNonUserCode()]
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591